{"version":3,"file":"components.81206fbb.js","sources":["../../../../src/components/Modal.svelte","../../../../src/components/Button.svelte","../../../../node_modules/svecial/src/components/GoogleButton.svelte","../../../../node_modules/svecial/src/components/FacebookButton.svelte","../../../../node_modules/svecial/src/components/DiscordButton.svelte","../../../../src/routes/_buttonsInfos.js","../../../../src/routes/components.svelte"],"sourcesContent":["<script>\r\n\texport let name;\r\n</script>\r\n\r\n<div class=\"modal\" modal={name}>\r\n\t<div class=\"modal-background\"></div>\r\n\t<div class=\"modal-card\">\r\n\t\t<header class=\"modal-card-head\">\r\n\t\t\t<slot name=\"header\" />\r\n\t\t</header>\r\n\t\t<section class=\"modal-card-body\">\r\n\t\t\t<slot name=\"body\" />\r\n\t\t</section>\r\n\t\t<footer class=\"modal-card-foot\">\r\n\t\t\t<slot name=\"footer\" />\r\n\t\t</footer>\r\n\t</div>\r\n</div>","<script>\r\n    import Modal from './Modal.svelte'\r\n\r\n\texport let name;\r\n\texport let props;\r\n    \r\n</script>\r\n\r\n<style>\r\n\t.parameter {\r\n\t\tcolor: deepskyblue\r\n\t}\r\n</style>\r\n\r\n<Modal {name}>\r\n\t<div slot=\"header\">\r\n\t\t<p class=\"modal-card-title\">{name}</p>\r\n\t</div>\r\n\t<div slot=\"body\">\r\n\t\t<div class=\"columns\">\r\n\t\t\t<div class=\"column\">\r\n\t\t\t\t<slot />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"column\">\r\n\t\t\t\t<slot name=\"pattern\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n        <br>\r\n        <h1 class=\"title\">API</h1>\r\n        <br>\r\n\t\t<table class=\"table is-striped is-fullwidth is-hoverable\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Props</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t<th>Values</th>\r\n\t\t\t\t\t<th>Default Value</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{#each props as p}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"parameter\">{p.props}</td>\r\n\t\t\t\t\t\t<td>{p.description}</td>\r\n\t\t\t\t\t\t<td>{p.type}</td>\r\n\t\t\t\t\t\t<td><code>{p.values.join(', ')}</code></td>\r\n\t\t\t\t\t\t<td><code>{p.default}</code></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t{/each}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t</div>\r\n\t<div slot=\"footer\">\r\n\t\t<button class=\"button is-info\" close-modal={name}>Close</button>\r\n\t</div>\r\n</Modal>","<script>\r\n\r\n\t// Documentation available here: https://developers.google.com/identity/sign-in/web/reference\r\n\t\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let appId;\r\n\texport let scopes = 'profile'; // Seperated with a comma\r\n\texport let width = 140;\r\n\texport let height = 40;\r\n\texport let longTitle = false;\r\n\texport let theme = 'light';\r\n\texport let isFlex = false;\r\n\texport let onLoginFailure = () => {console.log('Logged to google with failure!')};\r\n\texport let onLoginSuccess = () => {console.log('Logged to google with success!')};\r\n\r\n\tscopes = scopes.toLocaleLowerCase().replace(/\\s/gmui, '');\r\n\r\n\tasync function update(element, style, value) {\r\n\t\telement.style[style] = value;\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\tconst script = document.createElement(\"script\");\r\n\t\tscript.src = \"https://apis.google.com/js/platform.js\";\r\n\t\tscript.onload = () => {\r\n\t\t\tgapi.load('auth2', () => {\r\n\t\t\t\tconst GoogleAuth = gapi.auth2.init({\r\n\t\t\t\t\tclient_id: `${appId}.apps.googleusercontent.com`,\r\n\t\t\t\t\tscope: scopes,\r\n\t\t\t\t\tfetch_basic_profile: true\r\n\t\t\t\t})\r\n\t\t\t\tconst googleButtons = document.getElementsByClassName('google-signin-button');\r\n\t\t\t\tfor (let i = 0; i < googleButtons.length; i ++) {\r\n\t\t\t\t\tgoogleButtons[i].id = `google-signin-button${i}`;\r\n\t\t\t\t\tgapi.signin2.render(`google-signin-button${i}`, {\r\n\t\t\t\t\t\tscope: scopes,\r\n\t\t\t\t\t\twidth,\r\n\t\t\t\t\t\theight,\r\n\t\t\t\t\t\tlongtitle: longTitle,\r\n\t\t\t\t\t\ttheme,\r\n\t\t\t\t\t\tonsuccess: onLoginSuccess,\r\n\t\t\t\t\t\tonfailure: onLoginFailure\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (isFlex) {\r\n\t\t\t\t\t\tupdate(googleButtons[i], 'display', 'flex');\r\n\t\t\t\t\t\tupdate(googleButtons[i], 'alignItems', 'center');\r\n\t\t\t\t\t\tupdate(googleButtons[i], 'justifyContent', 'center');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\r\n\t})\r\n\t\r\n</script>\r\n\r\n<div class='google-signin-button'></div>","<script>\r\n\r\n\t// Documentation available here: https://developers.facebook.com/docs/javascript/reference/v3.3\r\n\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let appId;\r\n\texport let type = \"login_with\"; // or \"continue_with\"\r\n\texport let size = \"large\"; // or \"medium\", \"small\"\r\n\texport let scopes = \"public_profile\"; // Seperated with a comma\r\n\texport let audience = \"friends\"; // or \"only_me\", \"everyone\"\r\n\texport let debug = false;\r\n\texport let language = \"en_US\";\r\n\texport let useContinueAs = false;\r\n\texport let autoLogoutButton = true;\r\n\texport let onLoginSuccess = () => {console.log(\"Logged to facebook with success!\")};\r\n\texport let onLoginFailure = () => {console.log(\"Logged to facebook with failure!\")};\r\n\texport let onStatusChange = () => {console.log(\"Facebook status changed!\")};\r\n\r\n\tfunction statusChangeCallback(response) {\r\n\t\tif (response.status === 'connected') {\r\n\t\t\tonLoginSuccess(response);\r\n\t\t} else {\r\n\t\t\tonLoginFailure(response);\r\n\t\t}\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\tconst script = document.createElement(\"script\");\r\n\t\tscript.src = `https://connect.facebook.net/${language}/sdk.js`;\r\n\t\tif (debug) script.src += \"/debug.js\";\r\n\t\tscript.onload = () => {\r\n\t\t\twindow.fbAsyncInit = () => {\r\n\t\t\t\tFB.init({\r\n\t\t\t\t\tappId,\r\n\t\t\t\t\tcookie: true,\r\n\t\t\t\t\txfbml: true,\r\n\t\t\t\t\tversion: 'v3.3'\r\n\t\t\t\t});\r\n\t\t\t/*\tFB.getLoginStatus((response) => {\r\n\t\t\t\t\tstatusChangeCallback(response);\r\n\t\t\t\t\tonStatusChange(response);\r\n\t\t\t\t});*/\r\n\t\t\t/*\tFB.ui({ method: 'login', href: 'https://developers.facebook.com/docs/' }, (response) => {\r\n\t\t\t\t\tif (response && !response.error_message) {\r\n\t\t\t\t\t\tonLoginSuccess(response);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonLoginFailure(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t})*/\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\r\n\t});\r\n\t\r\n</script>\r\n\r\n<fb:login-button\r\n\tid=\"fb-login-button\"\r\n\tbutton-type={type}\r\n\tsize={size}\r\n\tonlogin={onLoginSuccess}\r\n\tauto-logout-link={autoLogoutButton}\r\n\tdefault-audience={audience}\r\n\tuse-continue-as={useContinueAs}\r\n\tscope={scopes.replace(/\\s/gmui, '')}\r\n></fb:login-button>","<script>\r\n\r\n\t// Documentation available here: https://discordapp.com/developers/docs/topics/oauth2\r\n\t// Using: https://github.com/DreamingBot/Login-With-Discord-DB\r\n\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let appId;\r\n\texport let scopes = 'identify'; // Seperated with a comma\r\n\texport let redirect = '/';\r\n\texport let color = 'dark';\r\n\texport let onLoginFailure = () => {console.log('Logged to discord with failure!')};\r\n\texport let onLoginSuccess = () => {console.log('Logged to discord with success!')};\r\n\r\n\tlet data = {};\r\n\tlet clazz = `discord-signin-button button is-${color}`;\r\n\r\n\tonMount(async () => {\r\n\t\tscopes = scopes.toLocaleLowerCase().replace(/\\s/gmui, '').split(',');\r\n\t\tconst script = document.createElement('script');\r\n\t\tconst fontawesome = document.createElement('script');\r\n\t\tconst bulma = document.createElement('link');\r\n\r\n\t\tscript.src = 'https://cdn.jsdelivr.net/gh/dusterthefirst/Login-With-Discord/dist/lwd.js';\r\n\t\tfontawesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\n\t\tbulma.href = 'https://unpkg.com/bulmaswatch/materia/bulmaswatch.min.css';\r\n\t\tbulma.rel = \"stylesheet\";\r\n\t\tbulma.type = 'text/css';\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(bulma);\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(fontawesome);\r\n\t})\r\n\r\n\tasync function login() {\r\n\t\tlet discord = new LoginWithDiscord({\r\n\t\t\tclientID: appId,\r\n\t\t\tscopes,\r\n\t\t\tredirect_url: redirect\r\n\t\t});\r\n\t\tdiscord.init();\r\n\t\tdiscord.login()\r\n\t\t\t.then(async () => {\r\n\t\t\t\tif (scopes.includes('identify' || 'email')) {\r\n\t\t\t\t\tdata = {...data, user: await discord.fetchUser()}\r\n\t\t\t\t}\r\n\t\t\t\tif (scopes.includes('connections')) {\r\n\t\t\t\t\tdata = {...data, connections: await discord.fetchConnections()}\r\n\t\t\t\t}\r\n\t\t\t\tif (scopes.includes('guilds')) {\r\n\t\t\t\t\tdata = {...data, guilds: await discord.fetchGuilds()}\r\n\t\t\t\t}\r\n\t\t\t\tonLoginSuccess(data);\r\n\t\t\t})\r\n\t\t\t.catch(err => onLoginFailure(err));\r\n\t}\r\n\t\r\n</script>\r\n\r\n<style>\r\n\t.is-black { background-color: black; color: white; }\r\n\t.is-light { background-color: white }\r\n\t.is-pink { background-color: pink }\r\n\t.is-yellow { background-color: yellow }\r\n\t.is-aqua { background-color: aqua }\r\n\t.is-lightblue { background-color: lightblue }\r\n\t.is-lightgreen { background-color: lightgreen }\r\n\t.is-brown { background-color: brown; color: white; }\r\n\t.is-blue { background-color: blue; color: white; }\r\n\t.is-gray { background-color: gray; color: white; }\r\n\t.is-green { background-color: green; color: white; }\r\n\t.is-purple { background-color: purple; color: white; }\r\n</style>\r\n\r\n<a href=\"#!\" class={clazz} on:click={login}>\r\n\t<span class='icon'>\r\n\t\t<i class='fab fa-discord fa-lg'></i>\r\n    </span>\r\n    <span>Connexion</span>\r\n</a>","const _default = [{\r\n    props: 'appId',\r\n    description: 'The id of your Discord app',\r\n    type: 'string',\r\n    values: ['-'],\r\n    default: '-',\r\n}]\r\n\r\nexport const GoogleButtonInfos = _default.concat([{\r\n    props: 'scopes',\r\n    description: 'Scopes for your app, seperated with a comma, i.e \"profile, email\"',\r\n    type: 'string',\r\n    values: ['profile', 'email'],\r\n    default: 'profile'\r\n}, {\r\n    props: 'width',\r\n    description: 'Width of the button',\r\n    type: 'integer',\r\n    values: ['-'],\r\n    default: '140'\r\n}, {\r\n    props: 'height',\r\n    description: 'Height of the button',\r\n    type: 'integer',\r\n    values: ['-'],\r\n    default: '40'\r\n}, {\r\n    props: 'longTitle',\r\n    description: 'Display long labels such as \"Sign in with Google\" rather than \"Sign in\"',\r\n    type: 'boolean',\r\n    values: ['true', 'false'],\r\n    default: 'false'\r\n}, {\r\n    props: 'theme',\r\n    description: 'Theme of button',\r\n    type: 'string',\r\n    values: ['light', 'dark'],\r\n    default: 'light'\r\n}, {\r\n    props: 'onLoginSuccess',\r\n    description: 'A function if the login is a success, take the GoogleUser in paramater',\r\n    type: 'Function',\r\n    values: ['-'],\r\n    default: `() => {console.log('Logged to google with success!')}`\r\n}, {\r\n    props: 'onLoginFailure',\r\n    description: 'A function if the login is a failure, take the error in paramater',\r\n    type: 'Function',\r\n    values: ['-'],\r\n    default: `() => {console.log('Logged to google with failure!')}`\r\n}])\r\n\r\nexport const FacebookButtonInfos = _default.concat([{\r\n    props: 'scopes',\r\n    description: 'Scopes for your app, seperated with a comma, i.e \"public_profile, email\"',\r\n    type: 'string',\r\n    values: [\r\n        'public_profile',\r\n        'email',\r\n        'groups_access_member_info',\r\n        'publish_to_groups',\r\n        'user_age_range',\r\n        'user_birthday',\r\n        'user_events',\r\n        'user_friends',\r\n        'user_gender',\r\n        'user_hometown',\r\n        'user_likes',\r\n        'user_link',\r\n        'user_location',\r\n        'user_photos',\r\n        'user_posts',\r\n        'user_tagged_places',\r\n        'user_videos'\r\n    ],\r\n    default: 'public_profile'\r\n}, {\r\n    props: 'type',\r\n    description: 'Type of button',\r\n    type: 'string',\r\n    values: ['login_with', 'continue_with'],\r\n    default: 'login_with'\r\n}, {\r\n    props: 'audience',\r\n    description: 'Choose the default audience selected when you request write permissions',\r\n    type: 'string',\r\n    values: ['friends', 'only_me', 'everyone'],\r\n    default: 'friends'\r\n}, {\r\n    props: 'size',\r\n    description: 'Size of button',\r\n    type: 'string',\r\n    values: ['small', 'medium', 'large'],\r\n    default: 'large'\r\n}, {\r\n    props: 'language',\r\n    description: 'Language of the user, i.e en_US',\r\n    type: 'string',\r\n    values: ['-'],\r\n    default: 'en_US'\r\n}, {\r\n    props: 'useContinueAs',\r\n    description: 'If user is already connected, show him a \"continue as\" button instead of \"connexion\"?',\r\n    type: 'boolean',\r\n    values: ['true', 'false'],\r\n    default: 'false'\r\n}, {\r\n    props: 'autoLogoutButton',\r\n    description: 'If user is already connected to your app, show him a \"Logout\" button?',\r\n    type: 'boolean',\r\n    values: ['true', 'false'],\r\n    default: 'true'\r\n}, {\r\n    props: 'debug',\r\n    description: 'Enable debug mode of Facebook\\'s sdk',\r\n    type: 'boolean',\r\n    values: ['true', 'false'],\r\n    default: 'false'\r\n}, {\r\n    props: 'onLoginSuccess',\r\n    description: 'A function if the login is a success, take the response in paramater',\r\n    type: 'Function',\r\n    values: ['-'],\r\n    default: '() => {console.log(\"Logged to facebook with success!\")}'\r\n}, {\r\n    props: 'onLoginFailure',\r\n    description: 'A function if the login is a failure, take the response in paramater',\r\n    type: 'Function',\r\n    values: ['-'],\r\n    default: '() => {console.log(\"Logged to facebook with failure!\")}'\r\n}, {\r\n    props: 'onStatusChange',\r\n    description: 'A function if the status of the user change',\r\n    type: 'Function',\r\n    values: ['-'],\r\n    default: '() => {console.log(\"Facebook status changed!\")}'\r\n}])\r\n\r\nexport const DiscordButtonInfos = _default.concat([{\r\n    props: 'scopes',\r\n    description: 'Scopes for your app, seperated with a comma, i.e \"identify, connections\"',\r\n    type: 'string',\r\n    values: ['identity', 'connections', 'guilds', 'email'],\r\n    default: 'profile'\r\n}, {\r\n    props: 'redirect',\r\n    description: 'The redirect url of your app',\r\n    type: 'string',\r\n    values: ['-'],\r\n    default: '/'\r\n}, {\r\n    props: 'color',\r\n    description: 'The color of the button',\r\n    type: 'string',\r\n    values: [\r\n        'dark',\r\n        'light',\r\n        'black',\r\n        'pink',\r\n        'yellow',\r\n        'aqua',\r\n        'lightblue',\r\n        'lightgreen',\r\n        'brown',\r\n        'blue',\r\n        'gray',\r\n        'green',\r\n        'purple'\r\n    ],\r\n    default: 'dark'\r\n}, {\r\n    props: 'onLoginSuccess',\r\n    description: 'A function if the login is a success, take the user\\'s informations in paramater',\r\n    type: 'Function',\r\n    values: ['-'],\r\n    default: '() => {console.log(\"Logged to discord with success!\")}'\r\n}, {\r\n    props: 'onLoginFailure',\r\n    description: 'A function if the login is a failure, take the the user\\'s informations in paramater',\r\n    type: 'Function',\r\n    values: ['-'],\r\n    default: '() => {console.log(\"Logged to discord with failure!\")}'\r\n}])","<script>\r\n\timport Navbar from '../components/Navbar.svelte';\r\n\timport Hero from '../components/Hero.svelte';\r\n\timport Button from '../components/Button.svelte'\r\n\r\n\timport { onMount } from 'svelte'\r\n\timport { GoogleButton, DiscordButton, FacebookButton } from 'svecial'\r\n\timport { GoogleButtonInfos, FacebookButtonInfos, DiscordButtonInfos } from './_buttonsInfos';\r\n\r\n\tlet elements;\r\n\tlet openModal;\r\n\tlet closeModal;\r\n\tlet modals;\r\n\r\n\tasync function putColor() {\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tconst element = elements[i];\r\n\t\t\tlet replacement = element.innerHTML;\r\n\t\t\tconst buttonName = replacement.match(/&lt;\\w+\\s+/gmui)[0];\r\n\t\t\tconst matches = replacement.match(/\\w+=/gmui);\r\n\t\t\treplacement = replacement.replace(buttonName, `<span style=\"color: #62b8f5\">${buttonName}</span>`);\r\n\t\t\tmatches.forEach(async match => {\r\n\t\t\t\treplacement = replacement.replace(match, `<span style=\"color: #ffd53d\">${match}</span>`);\r\n\t\t\t}) \r\n\t\t\t\r\n\t\t\telement.innerHTML = replacement;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function putListeners() {\r\n\t\tfor (let i = 0; i < openModal.length; i++) {\r\n\t\t\topenModal[i].addEventListener('click', () => {\r\n\t\t\t\tfor (let i2 = 0; i2 < modals.length; i2++) {\r\n\t\t\t\t\tif (modals[i2].getAttribute('modal') === openModal[i].getAttribute('open-modal')) {\r\n\t\t\t\t\t\tmodals[i2].classList.remove('is-active');\r\n\t\t\t\t\t\tmodals[i2].classList.add('is-active');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < closeModal.length; i++) {\r\n\t\t\tcloseModal[i].addEventListener('click', () => {\r\n\t\t\t\tfor (let i2 = 0; i2 < modals.length; i2++) {\r\n\t\t\t\t\tif (modals[i2].getAttribute('modal') === closeModal[i].getAttribute('close-modal')) {\r\n\t\t\t\t\t\tmodals[i2].classList.remove('is-active');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\telements = document.getElementsByClassName('pattern');\r\n\t\topenModal = document.querySelectorAll('[open-modal]');\r\n\t\tcloseModal = document.querySelectorAll('[close-modal]');\r\n\t\tmodals = document.querySelectorAll('[modal]');\r\n\t\tputColor();\r\n\t\tputListeners();\r\n\t})\r\n\r\n</script>\r\n\r\n<style>\r\n\th1 {color: #fff}\r\n\t.pattern {\r\n\t\tbackground-color: #39393a;\r\n\t\tcolor: #fff;\r\n\t}\r\n</style>\r\n\r\n<section>\r\n\t<Hero>\r\n\t\r\n\t\t<div slot=\"hero-head\">\r\n\t\t\t<Navbar />\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container has-text-centered\">\r\n\r\n\t\t\t<h1 class=\"title\">Components</h1>\r\n\t\t\t<br><br>\r\n\t\t\t\r\n\t\t\t<div class=\"columns is-centered\">\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<button class=\"button is-warning\" open-modal=\"Google Button\">Google Button</button>\r\n\t\t\t\t\t<Button name=\"Google Button\" props={GoogleButtonInfos}>\r\n\t\t\t\t\t\t<pre slot=\"pattern\" class=\"pattern\">&lt;GoogleButton appId=\"my app id\" theme=\"dark\" /></pre>\r\n\t\t\t\t\t\t<GoogleButton theme='dark' isFlex=true />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<button class=\"button is-warning\" open-modal=\"Facebook Button\">Facebook Button</button>\r\n\t\t\t\t\t<Button name=\"Facebook Button\" props={FacebookButtonInfos}>\r\n\t\t\t\t\t\t<pre slot=\"pattern\" class=\"pattern\">&lt;FacebookButton appId=\"my app id\" /></pre>\r\n\t\t\t\t\t\t<FacebookButton appId=\"1000227316855149\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<button class=\"button is-warning\" open-modal=\"Discord Button\">Discord Button</button>\r\n\t\t\t\t\t<Button name=\"Discord Button\" props={DiscordButtonInfos}>\r\n\t\t\t\t\t\t<pre slot=\"pattern\" class=\"pattern\">&lt;DiscordButton appId=\"my app id\" /></pre>\r\n\t\t\t\t\t\t<DiscordButton />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t</Hero>\r\n\r\n</section>\r\n\r\n"],"names":["name","p","props","description","type","values","join","default","length","update","element","style","value","appId","scopes","width","height","longTitle","theme","isFlex","onLoginFailure","console","log","onLoginSuccess","toLocaleLowerCase","replace","onMount","script","document","createElement","src","onload","gapi","load","auth2","init","client_id","scope","fetch_basic_profile","googleButtons","getElementsByClassName","i","id","signin2","render","longtitle","onsuccess","onfailure","getElementsByTagName","appendChild","size","autoLogoutButton","audience","useContinueAs","debug","language","onStatusChange","window","fbAsyncInit","FB","cookie","xfbml","version","clazz","login","redirect","color","data","discord","LoginWithDiscord","clientID","redirect_url","then","includes","fetchUser","user","fetchConnections","connections","fetchGuilds","guilds","catch","err","split","fontawesome","bulma","href","rel","_default","GoogleButtonInfos","concat","FacebookButtonInfos","DiscordButtonInfos","elements","openModal","closeModal","modals","putColor","replacement","innerHTML","buttonName","match","matches","forEach","putListeners","addEventListener","i2","getAttribute","classList","remove","add","querySelectorAll"],"mappings":"+0CAI0BA,yTAAAA,0KAHdA,IAAAA,geCemBA,+GAAAA,mLAAAA,yFA2BFC,EAAEC,UACpBD,EAAEE,gBACFF,EAAEG,SACIH,EAAEI,OAAOC,KAAK,UACdL,EAAEM,q8BAJUN,EAAEC,iCACpBD,EAAEE,uCACFF,EAAEG,gCACIH,EAAEI,OAAOC,KAAK,iCACdL,EAAEM,8MANRL,uBAALM,gaAAAA,0jCAAAA,giBAAAA,2KAAKN,uBAALM,iGAAAA,0BAAAA,UAAAA,ycAawCR,gHAAAA,8PAxCtCA,gOAAAA,8MAXIA,IAAAA,KACAE,IAAAA,4lBCcIO,2EAAf,WAAsBC,EAASC,EAAOC,iEACrCF,EAAQC,MAAMA,GAASC,yFAbbC,IAAAA,UACAC,OAAAA,aAAS,gBACTC,MAAAA,aAAQ,UACRC,OAAAA,aAAS,SACTC,UAAAA,oBACAC,MAAAA,aAAQ,cACRC,OAAAA,oBACAC,eAAAA,aAAiB,WAAOC,QAAQC,IAAI,yCACpCC,eAAAA,aAAiB,WAAOF,QAAQC,IAAI,uDAE/CR,EAASA,EAAOU,oBAAoBC,QAAQ,yEAAU,KAMtDC,WAAQ,kFACDC,EAASC,SAASC,cAAc,WAC/BC,IAAM,yCACbH,EAAOI,OAAS,WACfC,KAAKC,KAAK,QAAS,WACCD,KAAKE,MAAMC,KAAK,CAClCC,oBAAcvB,iCACdwB,MAAOvB,EACPwB,qBAAqB,YAEhBC,EAAgBX,SAASY,uBAAuB,wBAC7CC,EAAI,EAAGA,EAAIF,EAAc/B,OAAQiC,IACzCF,EAAcE,GAAGC,iCAA4BD,GAC7CT,KAAKW,QAAQC,qCAA8BH,GAAK,CAC/CJ,MAAOvB,EACPC,MAAAA,EACAC,OAAAA,EACA6B,UAAW5B,EACXC,MAAAA,EACA4B,UAAWvB,EACXwB,UAAW3B,IAERD,IACHV,GAAO8B,EAAcE,GAAI,UAAW,QACpChC,GAAO8B,EAAcE,GAAI,aAAc,UACvChC,GAAO8B,EAAcE,GAAI,iBAAkB,cAM/Cb,SAASoB,qBAAqB,QAAQ,GAAGC,YAAYtB,gkCCQzCvB,mBACP8C,sBACG3B,yCACS4B,2CACAC,kCACDC,+BACVvC,OAAOW,QAAQ,yEAAU,4EANnBrB,2BACP8C,wCACG3B,6DACS4B,uDACAC,mDACDC,kCACVvC,OAAOW,QAAQ,yEAAU,6EA7DrBZ,IAAAA,UACAT,KAAAA,aAAO,mBACP8C,KAAAA,aAAO,cACPpC,OAAAA,aAAS,uBACTsC,SAAAA,aAAW,gBACXE,MAAAA,oBACAC,SAAAA,aAAW,cACXF,cAAAA,oBACAF,iBAAAA,oBACA5B,eAAAA,aAAiB,WAAOF,QAAQC,IAAI,2CACpCF,eAAAA,aAAiB,WAAOC,QAAQC,IAAI,2CACpCkC,eAAAA,aAAiB,WAAOnC,QAAQC,IAAI,sCAU/CI,WAAQ,kFACDC,EAASC,SAASC,cAAc,WAC/BC,2CAAsCyB,aACzCD,IAAO3B,EAAOG,KAAO,aACzBH,EAAOI,OAAS,WACf0B,OAAOC,YAAc,WACpBC,GAAGxB,KAAK,CACPtB,MAAAA,EACA+C,QAAQ,EACRC,OAAO,EACPC,QAAS,WAgBZlC,SAASoB,qBAAqB,QAAQ,GAAGC,YAAYtB,0hECqBnCoC,yCAAiBC,oIAnEzBnD,IAAAA,UACAC,OAAAA,aAAS,iBACTmD,SAAAA,aAAW,UACXC,MAAAA,aAAQ,aACR9C,eAAAA,aAAiB,WAAOC,QAAQC,IAAI,0CACpCC,eAAAA,aAAiB,WAAOF,QAAQC,IAAI,sCAE3C6C,EAAO,GACPJ,4CAA2CG,kCAmB/C,kFACKE,EAAU,IAAIC,iBAAiB,CAClCC,SAAUzD,EACVC,OAAAA,EACAyD,aAAcN,KAEP9B,OACRiC,EAAQJ,QACNQ,cAAK,+EACD1D,EAAO2D,SAAS,wDACRN,WAAkBC,EAAQM,qCAApBC,WAAjBR,sCAEGrD,EAAO2D,SAAS,4DACRN,YAAyBC,EAAQQ,6CAA3BC,kBAAjBV,uCAEGrD,EAAO2D,SAAS,0DACRN,YAAoBC,EAAQU,0CAAtBC,cAAjBZ,uCAED5C,EAAe4C,8CAEfa,MAAM,SAAAC,UAAO7D,EAAe6D,4EArC/BvD,WAAQ,gGACPZ,EAASA,EAAOU,oBAAoBC,QAAQ,yEAAU,IAAIyD,MAAM,MAC1DvD,EAASC,SAASC,cAAc,UAChCsD,EAAcvD,SAASC,cAAc,UACrCuD,EAAQxD,SAASC,cAAc,QAErCF,EAAOG,IAAM,4EACbqD,EAAYrD,IAAM,wDAClBsD,EAAMC,KAAO,4DACbD,EAAME,IAAM,aACZF,EAAMhF,KAAO,WAEbwB,SAASoB,qBAAqB,QAAQ,GAAGC,YAAYmC,GACrDxD,SAASoB,qBAAqB,QAAQ,GAAGC,YAAYtB,GACrDC,SAASoB,qBAAqB,QAAQ,GAAGC,YAAYkC,kpBC/BjDI,GAAW,CAAC,CACdrF,MAAO,QACPC,YAAa,6BACbC,KAAM,SACNC,OAAQ,CAAC,KACTE,QAAS,MAGAiF,GAAoBD,GAASE,OAAO,CAAC,CAC9CvF,MAAO,SACPC,YAAa,oEACbC,KAAM,SACNC,OAAQ,CAAC,UAAW,SACpBE,QAAS,WACV,CACCL,MAAO,QACPC,YAAa,sBACbC,KAAM,UACNC,OAAQ,CAAC,KACTE,QAAS,OACV,CACCL,MAAO,SACPC,YAAa,uBACbC,KAAM,UACNC,OAAQ,CAAC,KACTE,QAAS,MACV,CACCL,MAAO,YACPC,YAAa,0EACbC,KAAM,UACNC,OAAQ,CAAC,OAAQ,SACjBE,QAAS,SACV,CACCL,MAAO,QACPC,YAAa,kBACbC,KAAM,SACNC,OAAQ,CAAC,QAAS,QAClBE,QAAS,SACV,CACCL,MAAO,iBACPC,YAAa,yEACbC,KAAM,WACNC,OAAQ,CAAC,KACTE,iEACD,CACCL,MAAO,iBACPC,YAAa,oEACbC,KAAM,WACNC,OAAQ,CAAC,KACTE,mEAGSmF,GAAsBH,GAASE,OAAO,CAAC,CAChDvF,MAAO,SACPC,YAAa,2EACbC,KAAM,SACNC,OAAQ,CACJ,iBACA,QACA,4BACA,oBACA,iBACA,gBACA,cACA,eACA,cACA,gBACA,aACA,YACA,gBACA,cACA,aACA,qBACA,eAEJE,QAAS,kBACV,CACCL,MAAO,OACPC,YAAa,iBACbC,KAAM,SACNC,OAAQ,CAAC,aAAc,iBACvBE,QAAS,cACV,CACCL,MAAO,WACPC,YAAa,0EACbC,KAAM,SACNC,OAAQ,CAAC,UAAW,UAAW,YAC/BE,QAAS,WACV,CACCL,MAAO,OACPC,YAAa,iBACbC,KAAM,SACNC,OAAQ,CAAC,QAAS,SAAU,SAC5BE,QAAS,SACV,CACCL,MAAO,WACPC,YAAa,kCACbC,KAAM,SACNC,OAAQ,CAAC,KACTE,QAAS,SACV,CACCL,MAAO,gBACPC,YAAa,wFACbC,KAAM,UACNC,OAAQ,CAAC,OAAQ,SACjBE,QAAS,SACV,CACCL,MAAO,mBACPC,YAAa,wEACbC,KAAM,UACNC,OAAQ,CAAC,OAAQ,SACjBE,QAAS,QACV,CACCL,MAAO,QACPC,YAAa,sCACbC,KAAM,UACNC,OAAQ,CAAC,OAAQ,SACjBE,QAAS,SACV,CACCL,MAAO,iBACPC,YAAa,uEACbC,KAAM,WACNC,OAAQ,CAAC,KACTE,QAAS,2DACV,CACCL,MAAO,iBACPC,YAAa,uEACbC,KAAM,WACNC,OAAQ,CAAC,KACTE,QAAS,2DACV,CACCL,MAAO,iBACPC,YAAa,8CACbC,KAAM,WACNC,OAAQ,CAAC,KACTE,QAAS,qDAGAoF,GAAqBJ,GAASE,OAAO,CAAC,CAC/CvF,MAAO,SACPC,YAAa,2EACbC,KAAM,SACNC,OAAQ,CAAC,WAAY,cAAe,SAAU,SAC9CE,QAAS,WACV,CACCL,MAAO,WACPC,YAAa,+BACbC,KAAM,SACNC,OAAQ,CAAC,KACTE,QAAS,KACV,CACCL,MAAO,QACPC,YAAa,0BACbC,KAAM,SACNC,OAAQ,CACJ,OACA,QACA,QACA,OACA,SACA,OACA,YACA,aACA,QACA,OACA,OACA,QACA,UAEJE,QAAS,QACV,CACCL,MAAO,iBACPC,YAAa,kFACbC,KAAM,WACNC,OAAQ,CAAC,KACTE,QAAS,0DACV,CACCL,MAAO,iBACPC,YAAa,sFACbC,KAAM,WACNC,OAAQ,CAAC,KACTE,QAAS,2kFC/F4BiF,wGAOEE,uGAODC,o+DAdDH,gGAOEE,+FAODC,6uBA3FrCC,EACAC,EACAC,EACAC,WAEWC,kEAAf,kGACUvD,OACF/B,EAAUkF,EAASnD,GACrBwD,EAAcvF,EAAQwF,UACpBC,EAAaF,EAAYG,MAAM,wGAAkB,GACjDC,EAAUJ,EAAYG,MAAM,iCAClCH,EAAcA,EAAYxE,QAAQ0E,yCAA4CA,cAC9EE,EAAQC,kCAAQ,WAAMF,iEACrBH,EAAcA,EAAYxE,QAAQ2E,yCAAuCA,8GAG1E1F,EAAQwF,UAAYD,GAVZxD,EAAI,EAAGA,EAAImD,EAASpF,OAAQiC,MAA5BA,4EAcK8D,kEAAf,oGACU9D,GACRoD,EAAUpD,GAAG+D,iBAAiB,QAAS,eACjC,IAAIC,EAAK,EAAGA,EAAKV,EAAOvF,OAAQiG,IAChCV,EAAOU,GAAIC,aAAa,WAAab,EAAUpD,GAAGiE,aAAa,gBAClEX,EAAOU,GAAIE,UAAUC,OAAO,aAC5Bb,EAAOU,GAAIE,UAAUE,IAAI,iBALpBpE,EAAI,EAAGA,EAAIoD,EAAUrF,OAAQiC,MAA7BA,kBAWAA,GACRqD,EAAWrD,GAAG+D,iBAAiB,QAAS,eAClC,IAAIC,EAAK,EAAGA,EAAKV,EAAOvF,OAAQiG,IAChCV,EAAOU,GAAIC,aAAa,WAAaZ,EAAWrD,GAAGiE,aAAa,gBACnEX,EAAOU,GAAIE,UAAUC,OAAO,gBAJvBnE,EAAI,EAAGA,EAAIqD,EAAWtF,OAAQiC,MAA9BA,0EAWVf,WAAQ,2EACPkE,EAAWhE,SAASY,uBAAuB,WAC3CqD,EAAYjE,SAASkF,iBAAiB,gBACtChB,EAAalE,SAASkF,iBAAiB,iBACvCf,EAASnE,SAASkF,iBAAiB,WACnCd,IACAO"}