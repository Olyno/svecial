{
  "version": 3,
  "file": "components.90343522.css",
  "sources": [
    "..\\..\\..\\..\\..\\..\\src\\components\\Button.svelte",
    "..\\..\\..\\..\\..\\..\\node_modules\\svecial\\src\\components\\DiscordButton.svelte",
    "..\\..\\..\\..\\..\\..\\src\\routes\\components.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import Modal from './Modal.svelte'\r\n\r\n\texport let name;\r\n\texport let props;\r\n    \r\n</script>\r\n\r\n<style>\r\n\t.parameter {\r\n\t\tcolor: deepskyblue\r\n\t}\r\n</style>\r\n\r\n<Modal {name}>\r\n\t<div slot=\"header\">\r\n\t\t<p class=\"modal-card-title\">{name}</p>\r\n\t</div>\r\n\t<div slot=\"body\">\r\n\t\t<div class=\"columns\">\r\n\t\t\t<div class=\"column\">\r\n\t\t\t\t<slot />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"column\">\r\n\t\t\t\t<slot name=\"pattern\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n        <br>\r\n        <h1 class=\"title\">API</h1>\r\n        <br>\r\n\t\t<table class=\"table is-striped is-fullwidth is-hoverable\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Props</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t<th>Values</th>\r\n\t\t\t\t\t<th>Default Value</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{#each props as p}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"parameter\">{p.props}</td>\r\n\t\t\t\t\t\t<td>{p.description}</td>\r\n\t\t\t\t\t\t<td>{p.type}</td>\r\n\t\t\t\t\t\t<td><code>{p.values.join(', ')}</code></td>\r\n\t\t\t\t\t\t<td><code>{p.default}</code></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t{/each}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t</div>\r\n\t<div slot=\"footer\">\r\n\t\t<button class=\"button is-info\" close-modal={name}>Close</button>\r\n\t</div>\r\n</Modal>",
    "<script>\r\n\r\n\t// Documentation available here: https://discordapp.com/developers/docs/topics/oauth2\r\n\t// Using: https://github.com/DreamingBot/Login-With-Discord-DB\r\n\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let appId;\r\n\texport let scopes = 'identify'; // Seperated with a comma\r\n\texport let redirect = '/';\r\n\texport let color = 'dark';\r\n\texport let onLoginFailure = () => {console.log('Logged to discord with failure!')};\r\n\texport let onLoginSuccess = () => {console.log('Logged to discord with success!')};\r\n\r\n\tlet data = {};\r\n\tlet clazz = `discord-signin-button button is-${color}`;\r\n\r\n\tonMount(async () => {\r\n\t\tscopes = scopes.toLocaleLowerCase().replace(/\\s/gmui, '').split(',');\r\n\t\tconst script = document.createElement('script');\r\n\t\tconst fontawesome = document.createElement('script');\r\n\t\tconst bulma = document.createElement('link');\r\n\r\n\t\tscript.src = 'https://cdn.jsdelivr.net/gh/dusterthefirst/Login-With-Discord/dist/lwd.js';\r\n\t\tfontawesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\n\t\tbulma.href = 'https://unpkg.com/bulmaswatch/materia/bulmaswatch.min.css';\r\n\t\tbulma.rel = \"stylesheet\";\r\n\t\tbulma.type = 'text/css';\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(bulma);\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(fontawesome);\r\n\t})\r\n\r\n\tasync function login() {\r\n\t\tlet discord = new LoginWithDiscord({\r\n\t\t\tclientID: appId,\r\n\t\t\tscopes,\r\n\t\t\tredirect_url: redirect\r\n\t\t});\r\n\t\tdiscord.init();\r\n\t\tdiscord.login()\r\n\t\t\t.then(async () => {\r\n\t\t\t\tif (scopes.includes('identify' || 'email')) {\r\n\t\t\t\t\tdata = {...data, user: await discord.fetchUser()}\r\n\t\t\t\t}\r\n\t\t\t\tif (scopes.includes('connections')) {\r\n\t\t\t\t\tdata = {...data, connections: await discord.fetchConnections()}\r\n\t\t\t\t}\r\n\t\t\t\tif (scopes.includes('guilds')) {\r\n\t\t\t\t\tdata = {...data, guilds: await discord.fetchGuilds()}\r\n\t\t\t\t}\r\n\t\t\t\tonLoginSuccess(data);\r\n\t\t\t})\r\n\t\t\t.catch(err => onLoginFailure(err));\r\n\t}\r\n\t\r\n</script>\r\n\r\n<style>\r\n\t.is-black { background-color: black; color: white; }\r\n\t.is-light { background-color: white }\r\n\t.is-pink { background-color: pink }\r\n\t.is-yellow { background-color: yellow }\r\n\t.is-aqua { background-color: aqua }\r\n\t.is-lightblue { background-color: lightblue }\r\n\t.is-lightgreen { background-color: lightgreen }\r\n\t.is-brown { background-color: brown; color: white; }\r\n\t.is-blue { background-color: blue; color: white; }\r\n\t.is-gray { background-color: gray; color: white; }\r\n\t.is-green { background-color: green; color: white; }\r\n\t.is-purple { background-color: purple; color: white; }\r\n</style>\r\n\r\n<a href=\"#!\" class={clazz} on:click={login}>\r\n\t<span class='icon'>\r\n\t\t<i class='fab fa-discord fa-lg'></i>\r\n    </span>\r\n    <span>Connexion</span>\r\n</a>",
    "<script>\r\n\timport Navbar from '../components/Navbar.svelte';\r\n\timport Hero from '../components/Hero.svelte';\r\n\timport Button from '../components/Button.svelte'\r\n\r\n\timport { onMount } from 'svelte'\r\n\timport { GoogleButton, DiscordButton, FacebookButton } from 'svecial'\r\n\timport { GoogleButtonInfos, FacebookButtonInfos, DiscordButtonInfos } from './_buttonsInfos';\r\n\r\n\tlet elements;\r\n\tlet openModal;\r\n\tlet closeModal;\r\n\tlet modals;\r\n\r\n\tasync function putColor() {\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tconst element = elements[i];\r\n\t\t\tlet replacement = element.innerHTML;\r\n\t\t\tconst buttonName = replacement.match(/&lt;\\w+\\s+/gmui)[0];\r\n\t\t\tconst matches = replacement.match(/\\w+=/gmui);\r\n\t\t\treplacement = replacement.replace(buttonName, `<span style=\"color: #62b8f5\">${buttonName}</span>`);\r\n\t\t\tmatches.forEach(async match => {\r\n\t\t\t\treplacement = replacement.replace(match, `<span style=\"color: #ffd53d\">${match}</span>`);\r\n\t\t\t}) \r\n\t\t\t\r\n\t\t\telement.innerHTML = replacement;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function putListeners() {\r\n\t\tfor (let i = 0; i < openModal.length; i++) {\r\n\t\t\topenModal[i].addEventListener('click', () => {\r\n\t\t\t\tfor (let i2 = 0; i2 < modals.length; i2++) {\r\n\t\t\t\t\tif (modals[i2].getAttribute('modal') === openModal[i].getAttribute('open-modal')) {\r\n\t\t\t\t\t\tmodals[i2].classList.remove('is-active');\r\n\t\t\t\t\t\tmodals[i2].classList.add('is-active');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < closeModal.length; i++) {\r\n\t\t\tcloseModal[i].addEventListener('click', () => {\r\n\t\t\t\tfor (let i2 = 0; i2 < modals.length; i2++) {\r\n\t\t\t\t\tif (modals[i2].getAttribute('modal') === closeModal[i].getAttribute('close-modal')) {\r\n\t\t\t\t\t\tmodals[i2].classList.remove('is-active');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\telements = document.getElementsByClassName('pattern');\r\n\t\topenModal = document.querySelectorAll('[open-modal]');\r\n\t\tcloseModal = document.querySelectorAll('[close-modal]');\r\n\t\tmodals = document.querySelectorAll('[modal]');\r\n\t\tputColor();\r\n\t\tputListeners();\r\n\t})\r\n\r\n</script>\r\n\r\n<style>\r\n\th1 {color: #fff}\r\n\t.pattern {\r\n\t\tbackground-color: #39393a;\r\n\t\tcolor: #fff;\r\n\t}\r\n</style>\r\n\r\n<section>\r\n\t<Hero>\r\n\t\r\n\t\t<div slot=\"hero-head\">\r\n\t\t\t<Navbar />\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container has-text-centered\">\r\n\r\n\t\t\t<h1 class=\"title\">Components</h1>\r\n\t\t\t<br><br>\r\n\t\t\t\r\n\t\t\t<div class=\"columns is-centered\">\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<button class=\"button is-warning\" open-modal=\"Google Button\">Google Button</button>\r\n\t\t\t\t\t<Button name=\"Google Button\" props={GoogleButtonInfos}>\r\n\t\t\t\t\t\t<pre slot=\"pattern\" class=\"pattern\">&lt;GoogleButton appId=\"my app id\" theme=\"dark\" /></pre>\r\n\t\t\t\t\t\t<GoogleButton theme='dark' isFlex=true />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<button class=\"button is-warning\" open-modal=\"Facebook Button\">Facebook Button</button>\r\n\t\t\t\t\t<Button name=\"Facebook Button\" props={FacebookButtonInfos}>\r\n\t\t\t\t\t\t<pre slot=\"pattern\" class=\"pattern\">&lt;FacebookButton appId=\"my app id\" /></pre>\r\n\t\t\t\t\t\t<FacebookButton appId=\"1000227316855149\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t<button class=\"button is-warning\" open-modal=\"Discord Button\">Discord Button</button>\r\n\t\t\t\t\t<Button name=\"Discord Button\" props={DiscordButtonInfos}>\r\n\t\t\t\t\t\t<pre slot=\"pattern\" class=\"pattern\">&lt;DiscordButton appId=\"my app id\" /></pre>\r\n\t\t\t\t\t\t<DiscordButton />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t</Hero>\r\n\r\n</section>\r\n\r\n"
  ],
  "names": [],
  "mappings": "AASC,UAAU,eAAC,CAAC,AACX,KAAK,CAAE,WAAW;CACnB,CAAC;ACiDD,SAAS,eAAC,CAAC,AAAC,gBAAgB,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,AAAE,CAAC,AACpD,SAAS,eAAC,CAAC,AAAC,gBAAgB,CAAE,KAAK,CAAC,CAAC,AACrC,QAAQ,eAAC,CAAC,AAAC,gBAAgB,CAAE,IAAI,CAAC,CAAC,AACnC,UAAU,eAAC,CAAC,AAAC,gBAAgB,CAAE,MAAM,CAAC,CAAC,AACvC,QAAQ,eAAC,CAAC,AAAC,gBAAgB,CAAE,IAAI,CAAC,CAAC,AACnC,aAAa,eAAC,CAAC,AAAC,gBAAgB,CAAE,SAAS,CAAC,CAAC,AAC7C,cAAc,eAAC,CAAC,AAAC,gBAAgB,CAAE,UAAU,CAAC,CAAC,AAC/C,SAAS,eAAC,CAAC,AAAC,gBAAgB,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,AAAE,CAAC,AACpD,QAAQ,eAAC,CAAC,AAAC,gBAAgB,CAAE,IAAI,CAAE,KAAK,CAAE,KAAK,AAAE,CAAC,AAClD,QAAQ,eAAC,CAAC,AAAC,gBAAgB,CAAE,IAAI,CAAE,KAAK,CAAE,KAAK,AAAE,CAAC,AAClD,SAAS,eAAC,CAAC,AAAC,gBAAgB,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,AAAE,CAAC,AACpD,UAAU,eAAC,CAAC,AAAC,gBAAgB,CAAE,MAAM,CAAE,KAAK,CAAE,KAAK,AAAE,CAAC;ACPtD,EAAE,cAAC,CAAC,KAAK,CAAE,IAAI,CAAC,AAChB,QAAQ,cAAC,CAAC,AACT,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IAAI,AACZ,CAAC"
}