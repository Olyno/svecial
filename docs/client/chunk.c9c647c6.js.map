{"version":3,"file":"chunk.c9c647c6.js","sources":["../../../../node_modules/svelte/internal/index.mjs","../../../../src/components/GoogleButton.svelte","../../../../src/components/DiscordButton.svelte","../../../../src/components/FacebookButton.svelte","../../../src/components/Navbar.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\r\n\r\n\t// Documentation available here: https://developers.google.com/identity/sign-in/web/reference\r\n\t\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let appId;\r\n\texport let scopes = 'profile'; // Seperated with a comma\r\n\texport let width = 140;\r\n\texport let height = 40;\r\n\texport let longTitle = false;\r\n\texport let theme = 'light';\r\n\texport let isFlex = false;\r\n\texport let onLoginFailure = () => {console.log('Logged to google with failure!')};\r\n\texport let onLoginSuccess = () => {console.log('Logged to google with success!')};\r\n\r\n\tscopes = scopes.toLocaleLowerCase().replace(/\\s/gmui, '');\r\n\r\n\tasync function update(element, style, value) {\r\n\t\telement.style[style] = value;\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\tconst script = document.createElement(\"script\");\r\n\t\tscript.src = \"https://apis.google.com/js/platform.js\";\r\n\t\tscript.onload = () => {\r\n\t\t\tgapi.load('auth2', () => {\r\n\t\t\t\tconst GoogleAuth = gapi.auth2.init({\r\n\t\t\t\t\tclient_id: `${appId}.apps.googleusercontent.com`,\r\n\t\t\t\t\tscope: scopes,\r\n\t\t\t\t\tfetch_basic_profile: true\r\n\t\t\t\t})\r\n\t\t\t\tconst googleButtons = document.getElementsByClassName('google-signin-button');\r\n\t\t\t\tfor (let i = 0; i < googleButtons.length; i ++) {\r\n\t\t\t\t\tgoogleButtons[i].id = `google-signin-button${i}`;\r\n\t\t\t\t\tgapi.signin2.render(`google-signin-button${i}`, {\r\n\t\t\t\t\t\tscope: scopes,\r\n\t\t\t\t\t\twidth,\r\n\t\t\t\t\t\theight,\r\n\t\t\t\t\t\tlongtitle: longTitle,\r\n\t\t\t\t\t\ttheme,\r\n\t\t\t\t\t\tonsuccess: onLoginSuccess,\r\n\t\t\t\t\t\tonfailure: onLoginFailure\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (isFlex) {\r\n\t\t\t\t\t\tupdate(googleButtons[i], 'display', 'flex');\r\n\t\t\t\t\t\tupdate(googleButtons[i], 'alignItems', 'center');\r\n\t\t\t\t\t\tupdate(googleButtons[i], 'justifyContent', 'center');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\r\n\t})\r\n\t\r\n</script>\r\n\r\n<div class='google-signin-button'></div>","<script>\r\n\r\n\t// Documentation available here: https://discordapp.com/developers/docs/topics/oauth2\r\n\t// Using: https://github.com/DreamingBot/Login-With-Discord-DB\r\n\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let appId;\r\n\texport let scopes = 'identify'; // Seperated with a comma\r\n\texport let redirect = '/';\r\n\texport let color = 'dark';\r\n\texport let onLoginFailure = () => {console.log('Logged to discord with failure!')};\r\n\texport let onLoginSuccess = () => {console.log('Logged to discord with success!')};\r\n\r\n\tlet data = {};\r\n\tlet clazz = `discord-signin-button button is-${color}`;\r\n\r\n\tonMount(async () => {\r\n\t\tscopes = scopes.toLocaleLowerCase().replace(/\\s/gmui, '').split(',');\r\n\t\tconst script = document.createElement('script');\r\n\t\tconst fontawesome = document.createElement('script');\r\n\t\tconst bulma = document.createElement('link');\r\n\r\n\t\tscript.src = 'https://cdn.jsdelivr.net/gh/dusterthefirst/Login-With-Discord/dist/lwd.js';\r\n\t\tfontawesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\n\t\tbulma.href = 'https://unpkg.com/bulmaswatch/materia/bulmaswatch.min.css';\r\n\t\tbulma.rel = \"stylesheet\";\r\n\t\tbulma.type = 'text/css';\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(bulma);\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(fontawesome);\r\n\t})\r\n\r\n\tasync function login() {\r\n\t\tlet discord = new LoginWithDiscord({\r\n\t\t\tclientID: appId,\r\n\t\t\tscopes,\r\n\t\t\tredirect_url: redirect\r\n\t\t});\r\n\t\tdiscord.init();\r\n\t\tdiscord.login()\r\n\t\t\t.then(async () => {\r\n\t\t\t\tif (scopes.includes('identify' || 'email')) {\r\n\t\t\t\t\tdata = {...data, user: await discord.fetchUser()}\r\n\t\t\t\t}\r\n\t\t\t\tif (scopes.includes('connections')) {\r\n\t\t\t\t\tdata = {...data, connections: await discord.fetchConnections()}\r\n\t\t\t\t}\r\n\t\t\t\tif (scopes.includes('guilds')) {\r\n\t\t\t\t\tdata = {...data, guilds: await discord.fetchGuilds()}\r\n\t\t\t\t}\r\n\t\t\t\tonLoginSuccess(data);\r\n\t\t\t})\r\n\t\t\t.catch(err => onLoginFailure(err));\r\n\t}\r\n\t\r\n</script>\r\n\r\n<style>\r\n\t.is-black { background-color: black; color: white; }\r\n\t.is-light { background-color: white }\r\n\t.is-pink { background-color: pink }\r\n\t.is-yellow { background-color: yellow }\r\n\t.is-aqua { background-color: aqua }\r\n\t.is-lightblue { background-color: lightblue }\r\n\t.is-lightgreen { background-color: lightgreen }\r\n\t.is-brown { background-color: brown; color: white; }\r\n\t.is-blue { background-color: blue; color: white; }\r\n\t.is-gray { background-color: gray; color: white; }\r\n\t.is-green { background-color: green; color: white; }\r\n\t.is-purple { background-color: purple; color: white; }\r\n</style>\r\n\r\n<a href=\"#!\" class={clazz} on:click={login}>\r\n\t<span class='icon'>\r\n\t\t<i class='fab fa-discord fa-lg'></i>\r\n    </span>\r\n    <span>Connexion</span>\r\n</a>","<script>\r\n\r\n\t// Documentation available here: https://developers.facebook.com/docs/javascript/reference/v3.3\r\n\r\n\timport { onMount } from 'svelte';\r\n\r\n\texport let appId;\r\n\texport let type = \"login_with\"; // or \"continue_with\"\r\n\texport let size = \"large\"; // or \"medium\", \"small\"\r\n\texport let scopes = \"public_profile\"; // Seperated with a comma\r\n\texport let audience = \"friends\"; // or \"only_me\", \"everyone\"\r\n\texport let debug = false;\r\n\texport let language = \"en_US\";\r\n\texport let useContinueAs = false;\r\n\texport let autoLogoutButton = true;\r\n\texport let onLoginSuccess = () => {console.log(\"Logged to facebook with success!\")};\r\n\texport let onLoginFailure = () => {console.log(\"Logged to facebook with failure!\")};\r\n\texport let onStatusChange = () => {console.log(\"Facebook status changed!\")};\r\n\r\n\tfunction statusChangeCallback(response) {\r\n\t\tif (response.status === 'connected') {\r\n\t\t\tonLoginSuccess(response);\r\n\t\t} else {\r\n\t\t\tonLoginFailure(response);\r\n\t\t}\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\tconst script = document.createElement(\"script\");\r\n\t\tscript.src = `https://connect.facebook.net/${language}/sdk.js`;\r\n\t\tif (debug) script.src += \"/debug.js\";\r\n\t\tscript.onload = () => {\r\n\t\t\twindow.fbAsyncInit = () => {\r\n\t\t\t\tFB.init({\r\n\t\t\t\t\tappId,\r\n\t\t\t\t\tcookie: true,\r\n\t\t\t\t\txfbml: true,\r\n\t\t\t\t\tversion: 'v3.3'\r\n\t\t\t\t});\r\n\t\t\t/*\tFB.getLoginStatus((response) => {\r\n\t\t\t\t\tstatusChangeCallback(response);\r\n\t\t\t\t\tonStatusChange(response);\r\n\t\t\t\t});*/\r\n\t\t\t/*\tFB.ui({ method: 'login', href: 'https://developers.facebook.com/docs/' }, (response) => {\r\n\t\t\t\t\tif (response && !response.error_message) {\r\n\t\t\t\t\t\tonLoginSuccess(response);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonLoginFailure(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t})*/\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\r\n\t});\r\n\t\r\n</script>\r\n\r\n<fb:login-button\r\n\tid=\"fb-login-button\"\r\n\tbutton-type={type}\r\n\tsize={size}\r\n\tonlogin={onLoginSuccess}\r\n\tauto-logout-link={autoLogoutButton}\r\n\tdefault-audience={audience}\r\n\tuse-continue-as={useContinueAs}\r\n\tscope={scopes.replace(/\\s/gmui, '')}\r\n></fb:login-button>","<script>\r\n\tlet isActive = false;\r\n\r\n\tasync function update() {\r\n\t\tisActive = !isActive;\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.is-blue {background-color: #3f51b5 !important}\r\n\ta.navbar-item:hover {background-color: rgb(51, 49, 49) !important}\r\n\t/*a.navbar-item {color: #fff !important;}\r\n\t.navbar-dropdown {background-color: #3f51b5 !important}*/\r\n</style>\r\n\r\n<nav class=\"navbar is-blue is-dark\">\r\n\t<div class=\"navbar-brand\">\r\n\t\t<a href=\"#!\" on:click={update} class={isActive ? \"navbar-burger burger is-active\" : \"navbar-burger burger\"}>\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t</a>\r\n\t</div>\r\n\t<div class={isActive ? \"navbar-menu is-active\" : \"navbar-menu\"} id=\"navbar\">\r\n\t\t<div class=\"navbar-start\">\r\n\t\t\t<a href=\"/\" class=\"navbar-item\">Home</a>\r\n\t\t\t<a href=\"/components\" class=\"navbar-item\">Components</a>\r\n\t\t</div>\r\n\t\t<div class=\"navbar-end\">\r\n\t\t\t<div class=\"navbar-item\">\r\n\t\t\t\t<div class=\"buttons\">\r\n\t\t\t\t\t<a href=\"https://github.com/Olyno/svecial\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"button\">\r\n\t\t\t\t\t\t<span><i class=\"fab fa-github\"></i></span>\r\n\t\t\t\t\t\t<span style=\"margin-left: 5px;\">Github</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</nav>"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","attr","attribute","value","removeAttribute","setAttribute","set_custom_element_data","prop","children","Array","from","childNodes","claim_element","nodes","attributes","svg","i","length","nodeName","j","splice","createElementNS","svg_element","claim_text","nodeType","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","make_dirty","key","then","init","options","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","on_destroy","context","Map","callbacks","ready","block","local","hydrate","l","c","intro","delete","m","new_on_destroy","map","filter","mount_component","SvelteComponent","[object Object]","detaching","this","d","$destroy","type","index","indexOf","async","style","appId","scopes","width","height","longTitle","theme","isFlex","onLoginFailure","console","log","onLoginSuccess","toLocaleLowerCase","replace","script","src","onload","gapi","load","auth2","client_id","scope","fetch_basic_profile","googleButtons","getElementsByClassName","id","signin2","render","longtitle","onsuccess","onfailure","getElementsByTagName","event","handler","clazz","login","addEventListener","removeEventListener","redirect","color","split","fontawesome","bulma","href","rel","discord","LoginWithDiscord","clientID","redirect_url","includes","user","fetchUser","connections","fetchConnections","guilds","fetchGuilds","catch","err","size","autoLogoutButton","audience","useContinueAs","debug","language","onStatusChange","window","fbAsyncInit","FB","cookie","xfbml","version","isActive"],"mappings":"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"}